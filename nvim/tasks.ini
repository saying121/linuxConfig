# vim: set fenc=utf-8 ft=dosini:

# check ":AsyncTaskMacro" to see available macros

# <F3>
[file-build]
command:c=echo $(VIM_FILEPATH) $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/c/file-build.sh
command:cpp=echo $(VIM_FILEPATH) $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/c/file-build.sh
command:rust=echo $(VIM_FILENAME) $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/rust/file-build.sh

command:go=echo $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/go/file-build.sh

cwd=$(VIM_FILEDIR)
output=terminal
save=2

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# <F4>
[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp=echo $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/c/file-run.sh
command:rust=echo $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/rust/file-run.sh

command:go=echo $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/go/file-run.sh

command:dockerfile=time docker build .

# 脚本类型语言
command:awk=time awk -f "$(VIM_FILEPATH)"
command:javascript=time node "$(VIM_FILENAME)"
command:lua=time luajit "$(VIM_FILENAME)"
command:perl=time perl "$(VIM_FILENAME)"
command:python=time python -u "$(VIM_FILENAME)"
command:ruby=time ruby "$(VIM_FILENAME)"
command:sh=time bash "$(VIM_FILENAME)"
command:zsh=time zsh "$(VIM_FILENAME)"

cwd=$(VIM_FILEDIR)
output=terminal
save=2

# <F2>
[file-build-run]
command:c=echo $(VIM_FILEPATH) $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/c/file-build-run.sh
command:cpp=echo $(VIM_FILEPATH) $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/cpp/file-build-run.sh
command:rust=echo $(VIM_FILENAME) $(VIM_FILEDIR) $(VIM_FILENOEXT) | xargs ~/.config/nvim/tasks/rust/file-build-run.sh

cwd=$(VIM_FILEDIR)
output=terminal
save=2

# Alt+b
[project-build]
command:rust=~/.config/nvim/tasks/rust/project-build.sh
command:c,cpp=time [ -d build ] || mkdir build;cd build; cmake ..; make

cwd=$(VIM_ROOT)
output=terminal
errorformat=%f:%l:%m
save=2

# Alt+r
[project-run]
command:rust=~/.config/nvim/tasks/rust/project-run.sh

# 脚本类型语言，不需编译，(python 是有编译过程的
command:awk=time awk -f "$(VIM_FILEPATH)"
command:javascript=time node "$(VIM_FILENAME)"
command:lua=time luajit "$(VIM_FILENAME)"
command:perl=time perl "$(VIM_FILENAME)"
# command:python=python -u main.py
command:python=time python -u "$(VIM_FILENAME)"
command:ruby=time ruby "$(VIM_FILENAME)"
command:sh=time bash "$(VIM_FILENAME)"
command:zsh=time zsh "$(VIM_FILENAME)"

cwd=$(VIM_ROOT)
output=terminal
save=2

[release]
# command/linux=echo linux default
command:rust/linux=~/.config/nvim/tasks/rust/release.sh

cwd=$(VIM_ROOT)
output=terminal
save=2

[release-and-run]
# command/linux=echo linux default
command:rust/linux=~/.config/nvim/tasks/rust/release-and-run.sh

cwd=$(VIM_ROOT)
output=terminal
save=2

[debug]
# command/linux=echo linux default
command:rust/linux=~/.config/nvim/tasks/rust/debug.sh

cwd=$(VIM_ROOT)
output=terminal
save=2
