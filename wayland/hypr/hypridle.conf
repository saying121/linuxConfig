$lock = ~/.linuxConfig/wayland/swaylock/swaylock.sh

general {
    lock_cmd = $lock                              # dbus/sysd lock command (loginctl lock-session)
    # unlock_cmd = notify-send "unlock!"            # same as above, but unlock
    before_sleep_cmd = $lock                      # command ran before sleep
    # after_sleep_cmd = notify-send "Awake!"        # command ran after sleep
    ignore_dbus_inhibit = false                   # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
}

# listener {
#     timeout = 5400                                # in seconds
#     on-timeout = systemctl suspend-then-hibernate # command to run when timeout has passed
#     # on-resume = notify-send "Welcome back!"       # command to run when activity is detected after timeout has fired.
# }

listener {
    timeout = 4000                                # in seconds
    on-timeout = killall wallpaper.sh             # command to run when timeout has passed
    # on-resume = notify-send "Welcome back!"       # command to run when activity is detected after timeout has fired.
}
listener {
    timeout = 4000                                # in seconds
    on-timeout = killall linux-wallpaperengine    # command to run when timeout has passed
    # on-resume = notify-send "Welcome back!"       # command to run when activity is detected after timeout has fired.
}
# lockscreen
listener {
    timeout = 1200                                # in seconds
    on-timeout = $lock                            # command to run when timeout has passed
    # on-resume = notify-send "Welcome back!"       # command to run when activity is detected after timeout has fired.
}
