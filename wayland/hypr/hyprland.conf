# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

$mainMod = SUPER
$shiftMod = SUPER_SHIFT
$altMod = SUPER_ALT
$alt = ALT
$shift = SHIFT

$lock = ~/.linuxConfig/wayland/swaylock/swaylock.sh

{{{ # special workspace

$workspace1 = term

# bind = SUPER, q, exec, [workspace special:$workspace1 ;float] kitty
bind = SUPER_ALT, Tab, movetoworkspace, special:$workspace1
# bind = SUPER, Tab, togglespecialworkspace, $workspace1
# bind = SUPER, Tab, exec, hyprctl dispatch togglespecialworkspace $workspace1
bind = SUPER, Tab, exec, ~/.linuxConfig/wayland/hypr/special_term.sh
bind = ALT, Tab, exec, ~/.linuxConfig/wayland/hypr/special_music.sh

}}}

{{{ # 自定义

# 鼠标移到右下角
bind = $mainMod, minus, movecursortocorner, 1
# toggle waybar
bind = $mainMod, x, exec, pkill waybar || waybar

# 锁屏
bind = $shiftMod, semicolon, exec, $lock

bind = $mainMod, g, togglegroup
bind = $mainMod, i, moveintogroup, r
bind = $shiftMod, i, moveintogroup, l
bind = $mainMod, o, moveoutofgroup

bind = $mainMod, h, changegroupactive, f
bind = $mainMod, l, changegroupactive, b

# Start wofi opens wofi on first press, closes it on second
# bindr = SUPER, SUPER_L, exec, pkill wofi || wofi --show drun

# 在一个软件内复制，这软件关闭后无法进行粘贴，需要配置快捷键显示剪切板历史
bind = SUPER, V, exec, cliphist list | ~/.linuxConfig/rofi/rofi_clip.sh -dmenu | cliphist decode | wl-copy
# bind = $mainMod, C, exec, ~/.linuxConfig/wayland/hypr/clear_clip.sh

bind = ALT, space, exec, pkill rofi || ~/.linuxConfig/rofi/launcher.sh
bind = CTRL ALT, space, exec, pkill rofi || ~/.linuxConfig/rofi/rofiasroot.sh

$screen_file = ${HOME}/Pictures/ScreenShot/screen_shot_$(date +"%Y-%m-%d_%H-%M-%S").png # 必须是 `$(date +"%Y-%m-%d_%H-%M-%S")` ,加号两边空格不能乱加

bind = $shiftMod, S, exec, grim -g "$(slurp)" - | wl-copy
# bind = $shiftMod, S, exec, hyprland-interactive-screenshot - | wl-copy
bind = , Print,       exec, grim $screen_file
bind = $shiftMod, p, exec, grim -g "$(slurp)" - > $screen_file
bind = $alt, Print,   exec, grim - | wl-copy

bind = $mainMod $altMod,  P,   exec, [float;noanim;toggleopaque] grim -o $(hyprctl monitors -j | jq '.[] | select(.focused == true) | .name' -r) - | imv -f - & grim -g "$(slurp)" - | swappy -f - && killall imv-wayland
# grim + slurp + swappy + imv + jq :实现hyprland暂停当前屏幕活动（伪）进行截屏

bind = $alt,     q, exec, killall pavucontrol || pavucontrol
bind = $mainMod, b, exec, killall blueman-manager|| blueman-manager

}}}

{{{ # See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, return, exec, wezterm
bind = CTRL ALT, t, exec, kitty
bind = $mainMod, f, fullscreen,
bind = $shiftMod, q, killactive,
bind = $shiftMod, e, exit,
bind = $mainMod, E, exec, dolphin
bind = $shiftMod, space, togglefloating,
# bind = $mainMod, p, exec, wofi --show drun
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, s, togglesplit, # dwindle

bind = $shiftMod, c, centerwindow,

}}}

{{{ # will switch to a submap called resize

bind = $mainMod, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , left,  resizeactive, -15 0
binde = , right, resizeactive, 15 0
binde = , up,    resizeactive, 0 -15
binde = , down,  resizeactive, 0 15

binde = , h,     resizeactive, -15 0
binde = , l,     resizeactive, 15 0
binde = , k,     resizeactive, 0 -15
binde = , j,     resizeactive, 0 15

# use reset to go back to the global submap
bind = , escape, submap, reset
bind = $mainMod, R, submap, reset

# will reset the submap, meaning end the current one and return to the global one
submap = reset

}}}

# 这个文件里面定义的变量，在下面的配置中依然生效
{{{ # Source a file (multi-file configs)

source = ~/.config/hypr/window_rule.conf
source = ~/.config/hypr/Variables.conf
source = ~/.config/hypr/monitors.conf
source = ~/.config/hypr/env.conf
source = ~/.config/hypr/auto_boot.conf
source = ~/.config/hypr/const_bind.conf

}}}
